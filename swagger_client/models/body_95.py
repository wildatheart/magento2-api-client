# coding: utf-8

"""
    Magento Community

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class Body95(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'creditmemo': 'SalesDataCreditmemoInterface',
        'offline_requested': 'bool'
    }

    attribute_map = {
        'creditmemo': 'creditmemo',
        'offline_requested': 'offlineRequested'
    }

    def __init__(self, creditmemo=None, offline_requested=None):
        """
        Body95 - a model defined in Swagger
        """

        self._creditmemo = None
        self._offline_requested = None

        self.creditmemo = creditmemo
        if offline_requested is not None:
          self.offline_requested = offline_requested

    @property
    def creditmemo(self):
        """
        Gets the creditmemo of this Body95.

        :return: The creditmemo of this Body95.
        :rtype: SalesDataCreditmemoInterface
        """
        return self._creditmemo

    @creditmemo.setter
    def creditmemo(self, creditmemo):
        """
        Sets the creditmemo of this Body95.

        :param creditmemo: The creditmemo of this Body95.
        :type: SalesDataCreditmemoInterface
        """
        if creditmemo is None:
            raise ValueError("Invalid value for `creditmemo`, must not be `None`")

        self._creditmemo = creditmemo

    @property
    def offline_requested(self):
        """
        Gets the offline_requested of this Body95.

        :return: The offline_requested of this Body95.
        :rtype: bool
        """
        return self._offline_requested

    @offline_requested.setter
    def offline_requested(self, offline_requested):
        """
        Sets the offline_requested of this Body95.

        :param offline_requested: The offline_requested of this Body95.
        :type: bool
        """

        self._offline_requested = offline_requested

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Body95):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
