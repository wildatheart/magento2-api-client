# coding: utf-8

"""
    Magento Community

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class SalesDataTotalInterface(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'base_shipping_amount': 'float',
        'base_shipping_canceled': 'float',
        'base_shipping_discount_amount': 'float',
        'base_shipping_discount_tax_compensation_amnt': 'float',
        'base_shipping_incl_tax': 'float',
        'base_shipping_invoiced': 'float',
        'base_shipping_refunded': 'float',
        'base_shipping_tax_amount': 'float',
        'base_shipping_tax_refunded': 'float',
        'shipping_amount': 'float',
        'shipping_canceled': 'float',
        'shipping_discount_amount': 'float',
        'shipping_discount_tax_compensation_amount': 'float',
        'shipping_incl_tax': 'float',
        'shipping_invoiced': 'float',
        'shipping_refunded': 'float',
        'shipping_tax_amount': 'float',
        'shipping_tax_refunded': 'float',
        'extension_attributes': 'SalesDataTotalExtensionInterface'
    }

    attribute_map = {
        'base_shipping_amount': 'base_shipping_amount',
        'base_shipping_canceled': 'base_shipping_canceled',
        'base_shipping_discount_amount': 'base_shipping_discount_amount',
        'base_shipping_discount_tax_compensation_amnt': 'base_shipping_discount_tax_compensation_amnt',
        'base_shipping_incl_tax': 'base_shipping_incl_tax',
        'base_shipping_invoiced': 'base_shipping_invoiced',
        'base_shipping_refunded': 'base_shipping_refunded',
        'base_shipping_tax_amount': 'base_shipping_tax_amount',
        'base_shipping_tax_refunded': 'base_shipping_tax_refunded',
        'shipping_amount': 'shipping_amount',
        'shipping_canceled': 'shipping_canceled',
        'shipping_discount_amount': 'shipping_discount_amount',
        'shipping_discount_tax_compensation_amount': 'shipping_discount_tax_compensation_amount',
        'shipping_incl_tax': 'shipping_incl_tax',
        'shipping_invoiced': 'shipping_invoiced',
        'shipping_refunded': 'shipping_refunded',
        'shipping_tax_amount': 'shipping_tax_amount',
        'shipping_tax_refunded': 'shipping_tax_refunded',
        'extension_attributes': 'extension_attributes'
    }

    def __init__(self, base_shipping_amount=None, base_shipping_canceled=None, base_shipping_discount_amount=None, base_shipping_discount_tax_compensation_amnt=None, base_shipping_incl_tax=None, base_shipping_invoiced=None, base_shipping_refunded=None, base_shipping_tax_amount=None, base_shipping_tax_refunded=None, shipping_amount=None, shipping_canceled=None, shipping_discount_amount=None, shipping_discount_tax_compensation_amount=None, shipping_incl_tax=None, shipping_invoiced=None, shipping_refunded=None, shipping_tax_amount=None, shipping_tax_refunded=None, extension_attributes=None):
        """
        SalesDataTotalInterface - a model defined in Swagger
        """

        self._base_shipping_amount = None
        self._base_shipping_canceled = None
        self._base_shipping_discount_amount = None
        self._base_shipping_discount_tax_compensation_amnt = None
        self._base_shipping_incl_tax = None
        self._base_shipping_invoiced = None
        self._base_shipping_refunded = None
        self._base_shipping_tax_amount = None
        self._base_shipping_tax_refunded = None
        self._shipping_amount = None
        self._shipping_canceled = None
        self._shipping_discount_amount = None
        self._shipping_discount_tax_compensation_amount = None
        self._shipping_incl_tax = None
        self._shipping_invoiced = None
        self._shipping_refunded = None
        self._shipping_tax_amount = None
        self._shipping_tax_refunded = None
        self._extension_attributes = None

        if base_shipping_amount is not None:
          self.base_shipping_amount = base_shipping_amount
        if base_shipping_canceled is not None:
          self.base_shipping_canceled = base_shipping_canceled
        if base_shipping_discount_amount is not None:
          self.base_shipping_discount_amount = base_shipping_discount_amount
        if base_shipping_discount_tax_compensation_amnt is not None:
          self.base_shipping_discount_tax_compensation_amnt = base_shipping_discount_tax_compensation_amnt
        if base_shipping_incl_tax is not None:
          self.base_shipping_incl_tax = base_shipping_incl_tax
        if base_shipping_invoiced is not None:
          self.base_shipping_invoiced = base_shipping_invoiced
        if base_shipping_refunded is not None:
          self.base_shipping_refunded = base_shipping_refunded
        if base_shipping_tax_amount is not None:
          self.base_shipping_tax_amount = base_shipping_tax_amount
        if base_shipping_tax_refunded is not None:
          self.base_shipping_tax_refunded = base_shipping_tax_refunded
        if shipping_amount is not None:
          self.shipping_amount = shipping_amount
        if shipping_canceled is not None:
          self.shipping_canceled = shipping_canceled
        if shipping_discount_amount is not None:
          self.shipping_discount_amount = shipping_discount_amount
        if shipping_discount_tax_compensation_amount is not None:
          self.shipping_discount_tax_compensation_amount = shipping_discount_tax_compensation_amount
        if shipping_incl_tax is not None:
          self.shipping_incl_tax = shipping_incl_tax
        if shipping_invoiced is not None:
          self.shipping_invoiced = shipping_invoiced
        if shipping_refunded is not None:
          self.shipping_refunded = shipping_refunded
        if shipping_tax_amount is not None:
          self.shipping_tax_amount = shipping_tax_amount
        if shipping_tax_refunded is not None:
          self.shipping_tax_refunded = shipping_tax_refunded
        if extension_attributes is not None:
          self.extension_attributes = extension_attributes

    @property
    def base_shipping_amount(self):
        """
        Gets the base_shipping_amount of this SalesDataTotalInterface.
        Base shipping amount.

        :return: The base_shipping_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_amount

    @base_shipping_amount.setter
    def base_shipping_amount(self, base_shipping_amount):
        """
        Sets the base_shipping_amount of this SalesDataTotalInterface.
        Base shipping amount.

        :param base_shipping_amount: The base_shipping_amount of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_amount = base_shipping_amount

    @property
    def base_shipping_canceled(self):
        """
        Gets the base_shipping_canceled of this SalesDataTotalInterface.
        Base shipping canceled.

        :return: The base_shipping_canceled of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_canceled

    @base_shipping_canceled.setter
    def base_shipping_canceled(self, base_shipping_canceled):
        """
        Sets the base_shipping_canceled of this SalesDataTotalInterface.
        Base shipping canceled.

        :param base_shipping_canceled: The base_shipping_canceled of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_canceled = base_shipping_canceled

    @property
    def base_shipping_discount_amount(self):
        """
        Gets the base_shipping_discount_amount of this SalesDataTotalInterface.
        Base shipping discount amount.

        :return: The base_shipping_discount_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_discount_amount

    @base_shipping_discount_amount.setter
    def base_shipping_discount_amount(self, base_shipping_discount_amount):
        """
        Sets the base_shipping_discount_amount of this SalesDataTotalInterface.
        Base shipping discount amount.

        :param base_shipping_discount_amount: The base_shipping_discount_amount of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_discount_amount = base_shipping_discount_amount

    @property
    def base_shipping_discount_tax_compensation_amnt(self):
        """
        Gets the base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.
        Base shipping discount tax compensation amount.

        :return: The base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_discount_tax_compensation_amnt

    @base_shipping_discount_tax_compensation_amnt.setter
    def base_shipping_discount_tax_compensation_amnt(self, base_shipping_discount_tax_compensation_amnt):
        """
        Sets the base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.
        Base shipping discount tax compensation amount.

        :param base_shipping_discount_tax_compensation_amnt: The base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_discount_tax_compensation_amnt = base_shipping_discount_tax_compensation_amnt

    @property
    def base_shipping_incl_tax(self):
        """
        Gets the base_shipping_incl_tax of this SalesDataTotalInterface.
        Base shipping including tax.

        :return: The base_shipping_incl_tax of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_incl_tax

    @base_shipping_incl_tax.setter
    def base_shipping_incl_tax(self, base_shipping_incl_tax):
        """
        Sets the base_shipping_incl_tax of this SalesDataTotalInterface.
        Base shipping including tax.

        :param base_shipping_incl_tax: The base_shipping_incl_tax of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_incl_tax = base_shipping_incl_tax

    @property
    def base_shipping_invoiced(self):
        """
        Gets the base_shipping_invoiced of this SalesDataTotalInterface.
        Base shipping invoiced.

        :return: The base_shipping_invoiced of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_invoiced

    @base_shipping_invoiced.setter
    def base_shipping_invoiced(self, base_shipping_invoiced):
        """
        Sets the base_shipping_invoiced of this SalesDataTotalInterface.
        Base shipping invoiced.

        :param base_shipping_invoiced: The base_shipping_invoiced of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_invoiced = base_shipping_invoiced

    @property
    def base_shipping_refunded(self):
        """
        Gets the base_shipping_refunded of this SalesDataTotalInterface.
        Base shipping refunded.

        :return: The base_shipping_refunded of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_refunded

    @base_shipping_refunded.setter
    def base_shipping_refunded(self, base_shipping_refunded):
        """
        Sets the base_shipping_refunded of this SalesDataTotalInterface.
        Base shipping refunded.

        :param base_shipping_refunded: The base_shipping_refunded of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_refunded = base_shipping_refunded

    @property
    def base_shipping_tax_amount(self):
        """
        Gets the base_shipping_tax_amount of this SalesDataTotalInterface.
        Base shipping tax amount.

        :return: The base_shipping_tax_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_tax_amount

    @base_shipping_tax_amount.setter
    def base_shipping_tax_amount(self, base_shipping_tax_amount):
        """
        Sets the base_shipping_tax_amount of this SalesDataTotalInterface.
        Base shipping tax amount.

        :param base_shipping_tax_amount: The base_shipping_tax_amount of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_tax_amount = base_shipping_tax_amount

    @property
    def base_shipping_tax_refunded(self):
        """
        Gets the base_shipping_tax_refunded of this SalesDataTotalInterface.
        Base shipping tax refunded.

        :return: The base_shipping_tax_refunded of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_tax_refunded

    @base_shipping_tax_refunded.setter
    def base_shipping_tax_refunded(self, base_shipping_tax_refunded):
        """
        Sets the base_shipping_tax_refunded of this SalesDataTotalInterface.
        Base shipping tax refunded.

        :param base_shipping_tax_refunded: The base_shipping_tax_refunded of this SalesDataTotalInterface.
        :type: float
        """

        self._base_shipping_tax_refunded = base_shipping_tax_refunded

    @property
    def shipping_amount(self):
        """
        Gets the shipping_amount of this SalesDataTotalInterface.
        Shipping amount.

        :return: The shipping_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_amount

    @shipping_amount.setter
    def shipping_amount(self, shipping_amount):
        """
        Sets the shipping_amount of this SalesDataTotalInterface.
        Shipping amount.

        :param shipping_amount: The shipping_amount of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_amount = shipping_amount

    @property
    def shipping_canceled(self):
        """
        Gets the shipping_canceled of this SalesDataTotalInterface.
        Shipping canceled amount.

        :return: The shipping_canceled of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_canceled

    @shipping_canceled.setter
    def shipping_canceled(self, shipping_canceled):
        """
        Sets the shipping_canceled of this SalesDataTotalInterface.
        Shipping canceled amount.

        :param shipping_canceled: The shipping_canceled of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_canceled = shipping_canceled

    @property
    def shipping_discount_amount(self):
        """
        Gets the shipping_discount_amount of this SalesDataTotalInterface.
        Shipping discount amount.

        :return: The shipping_discount_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_discount_amount

    @shipping_discount_amount.setter
    def shipping_discount_amount(self, shipping_discount_amount):
        """
        Sets the shipping_discount_amount of this SalesDataTotalInterface.
        Shipping discount amount.

        :param shipping_discount_amount: The shipping_discount_amount of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_discount_amount = shipping_discount_amount

    @property
    def shipping_discount_tax_compensation_amount(self):
        """
        Gets the shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.
        Shipping discount tax compensation amount.

        :return: The shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_discount_tax_compensation_amount

    @shipping_discount_tax_compensation_amount.setter
    def shipping_discount_tax_compensation_amount(self, shipping_discount_tax_compensation_amount):
        """
        Sets the shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.
        Shipping discount tax compensation amount.

        :param shipping_discount_tax_compensation_amount: The shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_discount_tax_compensation_amount = shipping_discount_tax_compensation_amount

    @property
    def shipping_incl_tax(self):
        """
        Gets the shipping_incl_tax of this SalesDataTotalInterface.
        Shipping including tax amount.

        :return: The shipping_incl_tax of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_incl_tax

    @shipping_incl_tax.setter
    def shipping_incl_tax(self, shipping_incl_tax):
        """
        Sets the shipping_incl_tax of this SalesDataTotalInterface.
        Shipping including tax amount.

        :param shipping_incl_tax: The shipping_incl_tax of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_incl_tax = shipping_incl_tax

    @property
    def shipping_invoiced(self):
        """
        Gets the shipping_invoiced of this SalesDataTotalInterface.
        Shipping invoiced amount.

        :return: The shipping_invoiced of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_invoiced

    @shipping_invoiced.setter
    def shipping_invoiced(self, shipping_invoiced):
        """
        Sets the shipping_invoiced of this SalesDataTotalInterface.
        Shipping invoiced amount.

        :param shipping_invoiced: The shipping_invoiced of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_invoiced = shipping_invoiced

    @property
    def shipping_refunded(self):
        """
        Gets the shipping_refunded of this SalesDataTotalInterface.
        Shipping refunded amount.

        :return: The shipping_refunded of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_refunded

    @shipping_refunded.setter
    def shipping_refunded(self, shipping_refunded):
        """
        Sets the shipping_refunded of this SalesDataTotalInterface.
        Shipping refunded amount.

        :param shipping_refunded: The shipping_refunded of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_refunded = shipping_refunded

    @property
    def shipping_tax_amount(self):
        """
        Gets the shipping_tax_amount of this SalesDataTotalInterface.
        Shipping tax amount.

        :return: The shipping_tax_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_tax_amount

    @shipping_tax_amount.setter
    def shipping_tax_amount(self, shipping_tax_amount):
        """
        Sets the shipping_tax_amount of this SalesDataTotalInterface.
        Shipping tax amount.

        :param shipping_tax_amount: The shipping_tax_amount of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_tax_amount = shipping_tax_amount

    @property
    def shipping_tax_refunded(self):
        """
        Gets the shipping_tax_refunded of this SalesDataTotalInterface.
        Shipping tax refunded amount.

        :return: The shipping_tax_refunded of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_tax_refunded

    @shipping_tax_refunded.setter
    def shipping_tax_refunded(self, shipping_tax_refunded):
        """
        Sets the shipping_tax_refunded of this SalesDataTotalInterface.
        Shipping tax refunded amount.

        :param shipping_tax_refunded: The shipping_tax_refunded of this SalesDataTotalInterface.
        :type: float
        """

        self._shipping_tax_refunded = shipping_tax_refunded

    @property
    def extension_attributes(self):
        """
        Gets the extension_attributes of this SalesDataTotalInterface.

        :return: The extension_attributes of this SalesDataTotalInterface.
        :rtype: SalesDataTotalExtensionInterface
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """
        Sets the extension_attributes of this SalesDataTotalInterface.

        :param extension_attributes: The extension_attributes of this SalesDataTotalInterface.
        :type: SalesDataTotalExtensionInterface
        """

        self._extension_attributes = extension_attributes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, SalesDataTotalInterface):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
