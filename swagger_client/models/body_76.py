# coding: utf-8

"""
    Magento Community

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class Body76(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'payment_method': 'QuoteDataPaymentInterface',
        'shipping_carrier_code': 'str',
        'shipping_method_code': 'str',
        'additional_data': 'QuoteDataTotalsAdditionalDataInterface'
    }

    attribute_map = {
        'payment_method': 'paymentMethod',
        'shipping_carrier_code': 'shippingCarrierCode',
        'shipping_method_code': 'shippingMethodCode',
        'additional_data': 'additionalData'
    }

    def __init__(self, payment_method=None, shipping_carrier_code=None, shipping_method_code=None, additional_data=None):
        """
        Body76 - a model defined in Swagger
        """

        self._payment_method = None
        self._shipping_carrier_code = None
        self._shipping_method_code = None
        self._additional_data = None

        self.payment_method = payment_method
        if shipping_carrier_code is not None:
          self.shipping_carrier_code = shipping_carrier_code
        if shipping_method_code is not None:
          self.shipping_method_code = shipping_method_code
        if additional_data is not None:
          self.additional_data = additional_data

    @property
    def payment_method(self):
        """
        Gets the payment_method of this Body76.

        :return: The payment_method of this Body76.
        :rtype: QuoteDataPaymentInterface
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """
        Sets the payment_method of this Body76.

        :param payment_method: The payment_method of this Body76.
        :type: QuoteDataPaymentInterface
        """
        if payment_method is None:
            raise ValueError("Invalid value for `payment_method`, must not be `None`")

        self._payment_method = payment_method

    @property
    def shipping_carrier_code(self):
        """
        Gets the shipping_carrier_code of this Body76.
        The carrier code.

        :return: The shipping_carrier_code of this Body76.
        :rtype: str
        """
        return self._shipping_carrier_code

    @shipping_carrier_code.setter
    def shipping_carrier_code(self, shipping_carrier_code):
        """
        Sets the shipping_carrier_code of this Body76.
        The carrier code.

        :param shipping_carrier_code: The shipping_carrier_code of this Body76.
        :type: str
        """

        self._shipping_carrier_code = shipping_carrier_code

    @property
    def shipping_method_code(self):
        """
        Gets the shipping_method_code of this Body76.
        The shipping method code.

        :return: The shipping_method_code of this Body76.
        :rtype: str
        """
        return self._shipping_method_code

    @shipping_method_code.setter
    def shipping_method_code(self, shipping_method_code):
        """
        Sets the shipping_method_code of this Body76.
        The shipping method code.

        :param shipping_method_code: The shipping_method_code of this Body76.
        :type: str
        """

        self._shipping_method_code = shipping_method_code

    @property
    def additional_data(self):
        """
        Gets the additional_data of this Body76.

        :return: The additional_data of this Body76.
        :rtype: QuoteDataTotalsAdditionalDataInterface
        """
        return self._additional_data

    @additional_data.setter
    def additional_data(self, additional_data):
        """
        Sets the additional_data of this Body76.

        :param additional_data: The additional_data of this Body76.
        :type: QuoteDataTotalsAdditionalDataInterface
        """

        self._additional_data = additional_data

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Body76):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
