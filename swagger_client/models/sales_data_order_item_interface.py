# coding: utf-8

"""
    Magento Community

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class SalesDataOrderItemInterface(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'additional_data': 'str',
        'amount_refunded': 'float',
        'applied_rule_ids': 'str',
        'base_amount_refunded': 'float',
        'base_cost': 'float',
        'base_discount_amount': 'float',
        'base_discount_invoiced': 'float',
        'base_discount_refunded': 'float',
        'base_discount_tax_compensation_amount': 'float',
        'base_discount_tax_compensation_invoiced': 'float',
        'base_discount_tax_compensation_refunded': 'float',
        'base_original_price': 'float',
        'base_price': 'float',
        'base_price_incl_tax': 'float',
        'base_row_invoiced': 'float',
        'base_row_total': 'float',
        'base_row_total_incl_tax': 'float',
        'base_tax_amount': 'float',
        'base_tax_before_discount': 'float',
        'base_tax_invoiced': 'float',
        'base_tax_refunded': 'float',
        'base_weee_tax_applied_amount': 'float',
        'base_weee_tax_applied_row_amnt': 'float',
        'base_weee_tax_disposition': 'float',
        'base_weee_tax_row_disposition': 'float',
        'created_at': 'str',
        'description': 'str',
        'discount_amount': 'float',
        'discount_invoiced': 'float',
        'discount_percent': 'float',
        'discount_refunded': 'float',
        'event_id': 'int',
        'ext_order_item_id': 'str',
        'free_shipping': 'int',
        'gw_base_price': 'float',
        'gw_base_price_invoiced': 'float',
        'gw_base_price_refunded': 'float',
        'gw_base_tax_amount': 'float',
        'gw_base_tax_amount_invoiced': 'float',
        'gw_base_tax_amount_refunded': 'float',
        'gw_id': 'int',
        'gw_price': 'float',
        'gw_price_invoiced': 'float',
        'gw_price_refunded': 'float',
        'gw_tax_amount': 'float',
        'gw_tax_amount_invoiced': 'float',
        'gw_tax_amount_refunded': 'float',
        'discount_tax_compensation_amount': 'float',
        'discount_tax_compensation_canceled': 'float',
        'discount_tax_compensation_invoiced': 'float',
        'discount_tax_compensation_refunded': 'float',
        'is_qty_decimal': 'int',
        'is_virtual': 'int',
        'item_id': 'int',
        'locked_do_invoice': 'int',
        'locked_do_ship': 'int',
        'name': 'str',
        'no_discount': 'int',
        'order_id': 'int',
        'original_price': 'float',
        'parent_item_id': 'int',
        'price': 'float',
        'price_incl_tax': 'float',
        'product_id': 'int',
        'product_type': 'str',
        'qty_backordered': 'float',
        'qty_canceled': 'float',
        'qty_invoiced': 'float',
        'qty_ordered': 'float',
        'qty_refunded': 'float',
        'qty_returned': 'float',
        'qty_shipped': 'float',
        'quote_item_id': 'int',
        'row_invoiced': 'float',
        'row_total': 'float',
        'row_total_incl_tax': 'float',
        'row_weight': 'float',
        'sku': 'str',
        'store_id': 'int',
        'tax_amount': 'float',
        'tax_before_discount': 'float',
        'tax_canceled': 'float',
        'tax_invoiced': 'float',
        'tax_percent': 'float',
        'tax_refunded': 'float',
        'updated_at': 'str',
        'weee_tax_applied': 'str',
        'weee_tax_applied_amount': 'float',
        'weee_tax_applied_row_amount': 'float',
        'weee_tax_disposition': 'float',
        'weee_tax_row_disposition': 'float',
        'weight': 'float',
        'parent_item': 'SalesDataOrderItemInterface',
        'product_option': 'CatalogDataProductOptionInterface',
        'extension_attributes': 'SalesDataOrderItemExtensionInterface'
    }

    attribute_map = {
        'additional_data': 'additional_data',
        'amount_refunded': 'amount_refunded',
        'applied_rule_ids': 'applied_rule_ids',
        'base_amount_refunded': 'base_amount_refunded',
        'base_cost': 'base_cost',
        'base_discount_amount': 'base_discount_amount',
        'base_discount_invoiced': 'base_discount_invoiced',
        'base_discount_refunded': 'base_discount_refunded',
        'base_discount_tax_compensation_amount': 'base_discount_tax_compensation_amount',
        'base_discount_tax_compensation_invoiced': 'base_discount_tax_compensation_invoiced',
        'base_discount_tax_compensation_refunded': 'base_discount_tax_compensation_refunded',
        'base_original_price': 'base_original_price',
        'base_price': 'base_price',
        'base_price_incl_tax': 'base_price_incl_tax',
        'base_row_invoiced': 'base_row_invoiced',
        'base_row_total': 'base_row_total',
        'base_row_total_incl_tax': 'base_row_total_incl_tax',
        'base_tax_amount': 'base_tax_amount',
        'base_tax_before_discount': 'base_tax_before_discount',
        'base_tax_invoiced': 'base_tax_invoiced',
        'base_tax_refunded': 'base_tax_refunded',
        'base_weee_tax_applied_amount': 'base_weee_tax_applied_amount',
        'base_weee_tax_applied_row_amnt': 'base_weee_tax_applied_row_amnt',
        'base_weee_tax_disposition': 'base_weee_tax_disposition',
        'base_weee_tax_row_disposition': 'base_weee_tax_row_disposition',
        'created_at': 'created_at',
        'description': 'description',
        'discount_amount': 'discount_amount',
        'discount_invoiced': 'discount_invoiced',
        'discount_percent': 'discount_percent',
        'discount_refunded': 'discount_refunded',
        'event_id': 'event_id',
        'ext_order_item_id': 'ext_order_item_id',
        'free_shipping': 'free_shipping',
        'gw_base_price': 'gw_base_price',
        'gw_base_price_invoiced': 'gw_base_price_invoiced',
        'gw_base_price_refunded': 'gw_base_price_refunded',
        'gw_base_tax_amount': 'gw_base_tax_amount',
        'gw_base_tax_amount_invoiced': 'gw_base_tax_amount_invoiced',
        'gw_base_tax_amount_refunded': 'gw_base_tax_amount_refunded',
        'gw_id': 'gw_id',
        'gw_price': 'gw_price',
        'gw_price_invoiced': 'gw_price_invoiced',
        'gw_price_refunded': 'gw_price_refunded',
        'gw_tax_amount': 'gw_tax_amount',
        'gw_tax_amount_invoiced': 'gw_tax_amount_invoiced',
        'gw_tax_amount_refunded': 'gw_tax_amount_refunded',
        'discount_tax_compensation_amount': 'discount_tax_compensation_amount',
        'discount_tax_compensation_canceled': 'discount_tax_compensation_canceled',
        'discount_tax_compensation_invoiced': 'discount_tax_compensation_invoiced',
        'discount_tax_compensation_refunded': 'discount_tax_compensation_refunded',
        'is_qty_decimal': 'is_qty_decimal',
        'is_virtual': 'is_virtual',
        'item_id': 'item_id',
        'locked_do_invoice': 'locked_do_invoice',
        'locked_do_ship': 'locked_do_ship',
        'name': 'name',
        'no_discount': 'no_discount',
        'order_id': 'order_id',
        'original_price': 'original_price',
        'parent_item_id': 'parent_item_id',
        'price': 'price',
        'price_incl_tax': 'price_incl_tax',
        'product_id': 'product_id',
        'product_type': 'product_type',
        'qty_backordered': 'qty_backordered',
        'qty_canceled': 'qty_canceled',
        'qty_invoiced': 'qty_invoiced',
        'qty_ordered': 'qty_ordered',
        'qty_refunded': 'qty_refunded',
        'qty_returned': 'qty_returned',
        'qty_shipped': 'qty_shipped',
        'quote_item_id': 'quote_item_id',
        'row_invoiced': 'row_invoiced',
        'row_total': 'row_total',
        'row_total_incl_tax': 'row_total_incl_tax',
        'row_weight': 'row_weight',
        'sku': 'sku',
        'store_id': 'store_id',
        'tax_amount': 'tax_amount',
        'tax_before_discount': 'tax_before_discount',
        'tax_canceled': 'tax_canceled',
        'tax_invoiced': 'tax_invoiced',
        'tax_percent': 'tax_percent',
        'tax_refunded': 'tax_refunded',
        'updated_at': 'updated_at',
        'weee_tax_applied': 'weee_tax_applied',
        'weee_tax_applied_amount': 'weee_tax_applied_amount',
        'weee_tax_applied_row_amount': 'weee_tax_applied_row_amount',
        'weee_tax_disposition': 'weee_tax_disposition',
        'weee_tax_row_disposition': 'weee_tax_row_disposition',
        'weight': 'weight',
        'parent_item': 'parent_item',
        'product_option': 'product_option',
        'extension_attributes': 'extension_attributes'
    }

    def __init__(self, additional_data=None, amount_refunded=None, applied_rule_ids=None, base_amount_refunded=None, base_cost=None, base_discount_amount=None, base_discount_invoiced=None, base_discount_refunded=None, base_discount_tax_compensation_amount=None, base_discount_tax_compensation_invoiced=None, base_discount_tax_compensation_refunded=None, base_original_price=None, base_price=None, base_price_incl_tax=None, base_row_invoiced=None, base_row_total=None, base_row_total_incl_tax=None, base_tax_amount=None, base_tax_before_discount=None, base_tax_invoiced=None, base_tax_refunded=None, base_weee_tax_applied_amount=None, base_weee_tax_applied_row_amnt=None, base_weee_tax_disposition=None, base_weee_tax_row_disposition=None, created_at=None, description=None, discount_amount=None, discount_invoiced=None, discount_percent=None, discount_refunded=None, event_id=None, ext_order_item_id=None, free_shipping=None, gw_base_price=None, gw_base_price_invoiced=None, gw_base_price_refunded=None, gw_base_tax_amount=None, gw_base_tax_amount_invoiced=None, gw_base_tax_amount_refunded=None, gw_id=None, gw_price=None, gw_price_invoiced=None, gw_price_refunded=None, gw_tax_amount=None, gw_tax_amount_invoiced=None, gw_tax_amount_refunded=None, discount_tax_compensation_amount=None, discount_tax_compensation_canceled=None, discount_tax_compensation_invoiced=None, discount_tax_compensation_refunded=None, is_qty_decimal=None, is_virtual=None, item_id=None, locked_do_invoice=None, locked_do_ship=None, name=None, no_discount=None, order_id=None, original_price=None, parent_item_id=None, price=None, price_incl_tax=None, product_id=None, product_type=None, qty_backordered=None, qty_canceled=None, qty_invoiced=None, qty_ordered=None, qty_refunded=None, qty_returned=None, qty_shipped=None, quote_item_id=None, row_invoiced=None, row_total=None, row_total_incl_tax=None, row_weight=None, sku=None, store_id=None, tax_amount=None, tax_before_discount=None, tax_canceled=None, tax_invoiced=None, tax_percent=None, tax_refunded=None, updated_at=None, weee_tax_applied=None, weee_tax_applied_amount=None, weee_tax_applied_row_amount=None, weee_tax_disposition=None, weee_tax_row_disposition=None, weight=None, parent_item=None, product_option=None, extension_attributes=None):
        """
        SalesDataOrderItemInterface - a model defined in Swagger
        """

        self._additional_data = None
        self._amount_refunded = None
        self._applied_rule_ids = None
        self._base_amount_refunded = None
        self._base_cost = None
        self._base_discount_amount = None
        self._base_discount_invoiced = None
        self._base_discount_refunded = None
        self._base_discount_tax_compensation_amount = None
        self._base_discount_tax_compensation_invoiced = None
        self._base_discount_tax_compensation_refunded = None
        self._base_original_price = None
        self._base_price = None
        self._base_price_incl_tax = None
        self._base_row_invoiced = None
        self._base_row_total = None
        self._base_row_total_incl_tax = None
        self._base_tax_amount = None
        self._base_tax_before_discount = None
        self._base_tax_invoiced = None
        self._base_tax_refunded = None
        self._base_weee_tax_applied_amount = None
        self._base_weee_tax_applied_row_amnt = None
        self._base_weee_tax_disposition = None
        self._base_weee_tax_row_disposition = None
        self._created_at = None
        self._description = None
        self._discount_amount = None
        self._discount_invoiced = None
        self._discount_percent = None
        self._discount_refunded = None
        self._event_id = None
        self._ext_order_item_id = None
        self._free_shipping = None
        self._gw_base_price = None
        self._gw_base_price_invoiced = None
        self._gw_base_price_refunded = None
        self._gw_base_tax_amount = None
        self._gw_base_tax_amount_invoiced = None
        self._gw_base_tax_amount_refunded = None
        self._gw_id = None
        self._gw_price = None
        self._gw_price_invoiced = None
        self._gw_price_refunded = None
        self._gw_tax_amount = None
        self._gw_tax_amount_invoiced = None
        self._gw_tax_amount_refunded = None
        self._discount_tax_compensation_amount = None
        self._discount_tax_compensation_canceled = None
        self._discount_tax_compensation_invoiced = None
        self._discount_tax_compensation_refunded = None
        self._is_qty_decimal = None
        self._is_virtual = None
        self._item_id = None
        self._locked_do_invoice = None
        self._locked_do_ship = None
        self._name = None
        self._no_discount = None
        self._order_id = None
        self._original_price = None
        self._parent_item_id = None
        self._price = None
        self._price_incl_tax = None
        self._product_id = None
        self._product_type = None
        self._qty_backordered = None
        self._qty_canceled = None
        self._qty_invoiced = None
        self._qty_ordered = None
        self._qty_refunded = None
        self._qty_returned = None
        self._qty_shipped = None
        self._quote_item_id = None
        self._row_invoiced = None
        self._row_total = None
        self._row_total_incl_tax = None
        self._row_weight = None
        self._sku = None
        self._store_id = None
        self._tax_amount = None
        self._tax_before_discount = None
        self._tax_canceled = None
        self._tax_invoiced = None
        self._tax_percent = None
        self._tax_refunded = None
        self._updated_at = None
        self._weee_tax_applied = None
        self._weee_tax_applied_amount = None
        self._weee_tax_applied_row_amount = None
        self._weee_tax_disposition = None
        self._weee_tax_row_disposition = None
        self._weight = None
        self._parent_item = None
        self._product_option = None
        self._extension_attributes = None

        if additional_data is not None:
          self.additional_data = additional_data
        if amount_refunded is not None:
          self.amount_refunded = amount_refunded
        if applied_rule_ids is not None:
          self.applied_rule_ids = applied_rule_ids
        if base_amount_refunded is not None:
          self.base_amount_refunded = base_amount_refunded
        if base_cost is not None:
          self.base_cost = base_cost
        if base_discount_amount is not None:
          self.base_discount_amount = base_discount_amount
        if base_discount_invoiced is not None:
          self.base_discount_invoiced = base_discount_invoiced
        if base_discount_refunded is not None:
          self.base_discount_refunded = base_discount_refunded
        if base_discount_tax_compensation_amount is not None:
          self.base_discount_tax_compensation_amount = base_discount_tax_compensation_amount
        if base_discount_tax_compensation_invoiced is not None:
          self.base_discount_tax_compensation_invoiced = base_discount_tax_compensation_invoiced
        if base_discount_tax_compensation_refunded is not None:
          self.base_discount_tax_compensation_refunded = base_discount_tax_compensation_refunded
        if base_original_price is not None:
          self.base_original_price = base_original_price
        if base_price is not None:
          self.base_price = base_price
        if base_price_incl_tax is not None:
          self.base_price_incl_tax = base_price_incl_tax
        if base_row_invoiced is not None:
          self.base_row_invoiced = base_row_invoiced
        if base_row_total is not None:
          self.base_row_total = base_row_total
        if base_row_total_incl_tax is not None:
          self.base_row_total_incl_tax = base_row_total_incl_tax
        if base_tax_amount is not None:
          self.base_tax_amount = base_tax_amount
        if base_tax_before_discount is not None:
          self.base_tax_before_discount = base_tax_before_discount
        if base_tax_invoiced is not None:
          self.base_tax_invoiced = base_tax_invoiced
        if base_tax_refunded is not None:
          self.base_tax_refunded = base_tax_refunded
        if base_weee_tax_applied_amount is not None:
          self.base_weee_tax_applied_amount = base_weee_tax_applied_amount
        if base_weee_tax_applied_row_amnt is not None:
          self.base_weee_tax_applied_row_amnt = base_weee_tax_applied_row_amnt
        if base_weee_tax_disposition is not None:
          self.base_weee_tax_disposition = base_weee_tax_disposition
        if base_weee_tax_row_disposition is not None:
          self.base_weee_tax_row_disposition = base_weee_tax_row_disposition
        if created_at is not None:
          self.created_at = created_at
        if description is not None:
          self.description = description
        if discount_amount is not None:
          self.discount_amount = discount_amount
        if discount_invoiced is not None:
          self.discount_invoiced = discount_invoiced
        if discount_percent is not None:
          self.discount_percent = discount_percent
        if discount_refunded is not None:
          self.discount_refunded = discount_refunded
        if event_id is not None:
          self.event_id = event_id
        if ext_order_item_id is not None:
          self.ext_order_item_id = ext_order_item_id
        if free_shipping is not None:
          self.free_shipping = free_shipping
        if gw_base_price is not None:
          self.gw_base_price = gw_base_price
        if gw_base_price_invoiced is not None:
          self.gw_base_price_invoiced = gw_base_price_invoiced
        if gw_base_price_refunded is not None:
          self.gw_base_price_refunded = gw_base_price_refunded
        if gw_base_tax_amount is not None:
          self.gw_base_tax_amount = gw_base_tax_amount
        if gw_base_tax_amount_invoiced is not None:
          self.gw_base_tax_amount_invoiced = gw_base_tax_amount_invoiced
        if gw_base_tax_amount_refunded is not None:
          self.gw_base_tax_amount_refunded = gw_base_tax_amount_refunded
        if gw_id is not None:
          self.gw_id = gw_id
        if gw_price is not None:
          self.gw_price = gw_price
        if gw_price_invoiced is not None:
          self.gw_price_invoiced = gw_price_invoiced
        if gw_price_refunded is not None:
          self.gw_price_refunded = gw_price_refunded
        if gw_tax_amount is not None:
          self.gw_tax_amount = gw_tax_amount
        if gw_tax_amount_invoiced is not None:
          self.gw_tax_amount_invoiced = gw_tax_amount_invoiced
        if gw_tax_amount_refunded is not None:
          self.gw_tax_amount_refunded = gw_tax_amount_refunded
        if discount_tax_compensation_amount is not None:
          self.discount_tax_compensation_amount = discount_tax_compensation_amount
        if discount_tax_compensation_canceled is not None:
          self.discount_tax_compensation_canceled = discount_tax_compensation_canceled
        if discount_tax_compensation_invoiced is not None:
          self.discount_tax_compensation_invoiced = discount_tax_compensation_invoiced
        if discount_tax_compensation_refunded is not None:
          self.discount_tax_compensation_refunded = discount_tax_compensation_refunded
        if is_qty_decimal is not None:
          self.is_qty_decimal = is_qty_decimal
        if is_virtual is not None:
          self.is_virtual = is_virtual
        if item_id is not None:
          self.item_id = item_id
        if locked_do_invoice is not None:
          self.locked_do_invoice = locked_do_invoice
        if locked_do_ship is not None:
          self.locked_do_ship = locked_do_ship
        if name is not None:
          self.name = name
        if no_discount is not None:
          self.no_discount = no_discount
        if order_id is not None:
          self.order_id = order_id
        if original_price is not None:
          self.original_price = original_price
        if parent_item_id is not None:
          self.parent_item_id = parent_item_id
        if price is not None:
          self.price = price
        if price_incl_tax is not None:
          self.price_incl_tax = price_incl_tax
        if product_id is not None:
          self.product_id = product_id
        if product_type is not None:
          self.product_type = product_type
        if qty_backordered is not None:
          self.qty_backordered = qty_backordered
        if qty_canceled is not None:
          self.qty_canceled = qty_canceled
        if qty_invoiced is not None:
          self.qty_invoiced = qty_invoiced
        if qty_ordered is not None:
          self.qty_ordered = qty_ordered
        if qty_refunded is not None:
          self.qty_refunded = qty_refunded
        if qty_returned is not None:
          self.qty_returned = qty_returned
        if qty_shipped is not None:
          self.qty_shipped = qty_shipped
        if quote_item_id is not None:
          self.quote_item_id = quote_item_id
        if row_invoiced is not None:
          self.row_invoiced = row_invoiced
        if row_total is not None:
          self.row_total = row_total
        if row_total_incl_tax is not None:
          self.row_total_incl_tax = row_total_incl_tax
        if row_weight is not None:
          self.row_weight = row_weight
        self.sku = sku
        if store_id is not None:
          self.store_id = store_id
        if tax_amount is not None:
          self.tax_amount = tax_amount
        if tax_before_discount is not None:
          self.tax_before_discount = tax_before_discount
        if tax_canceled is not None:
          self.tax_canceled = tax_canceled
        if tax_invoiced is not None:
          self.tax_invoiced = tax_invoiced
        if tax_percent is not None:
          self.tax_percent = tax_percent
        if tax_refunded is not None:
          self.tax_refunded = tax_refunded
        if updated_at is not None:
          self.updated_at = updated_at
        if weee_tax_applied is not None:
          self.weee_tax_applied = weee_tax_applied
        if weee_tax_applied_amount is not None:
          self.weee_tax_applied_amount = weee_tax_applied_amount
        if weee_tax_applied_row_amount is not None:
          self.weee_tax_applied_row_amount = weee_tax_applied_row_amount
        if weee_tax_disposition is not None:
          self.weee_tax_disposition = weee_tax_disposition
        if weee_tax_row_disposition is not None:
          self.weee_tax_row_disposition = weee_tax_row_disposition
        if weight is not None:
          self.weight = weight
        if parent_item is not None:
          self.parent_item = parent_item
        if product_option is not None:
          self.product_option = product_option
        if extension_attributes is not None:
          self.extension_attributes = extension_attributes

    @property
    def additional_data(self):
        """
        Gets the additional_data of this SalesDataOrderItemInterface.
        Additional data.

        :return: The additional_data of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._additional_data

    @additional_data.setter
    def additional_data(self, additional_data):
        """
        Sets the additional_data of this SalesDataOrderItemInterface.
        Additional data.

        :param additional_data: The additional_data of this SalesDataOrderItemInterface.
        :type: str
        """

        self._additional_data = additional_data

    @property
    def amount_refunded(self):
        """
        Gets the amount_refunded of this SalesDataOrderItemInterface.
        Amount refunded.

        :return: The amount_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._amount_refunded

    @amount_refunded.setter
    def amount_refunded(self, amount_refunded):
        """
        Sets the amount_refunded of this SalesDataOrderItemInterface.
        Amount refunded.

        :param amount_refunded: The amount_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._amount_refunded = amount_refunded

    @property
    def applied_rule_ids(self):
        """
        Gets the applied_rule_ids of this SalesDataOrderItemInterface.
        Applied rule IDs.

        :return: The applied_rule_ids of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._applied_rule_ids

    @applied_rule_ids.setter
    def applied_rule_ids(self, applied_rule_ids):
        """
        Sets the applied_rule_ids of this SalesDataOrderItemInterface.
        Applied rule IDs.

        :param applied_rule_ids: The applied_rule_ids of this SalesDataOrderItemInterface.
        :type: str
        """

        self._applied_rule_ids = applied_rule_ids

    @property
    def base_amount_refunded(self):
        """
        Gets the base_amount_refunded of this SalesDataOrderItemInterface.
        Base amount refunded.

        :return: The base_amount_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_amount_refunded

    @base_amount_refunded.setter
    def base_amount_refunded(self, base_amount_refunded):
        """
        Sets the base_amount_refunded of this SalesDataOrderItemInterface.
        Base amount refunded.

        :param base_amount_refunded: The base_amount_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_amount_refunded = base_amount_refunded

    @property
    def base_cost(self):
        """
        Gets the base_cost of this SalesDataOrderItemInterface.
        Base cost.

        :return: The base_cost of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_cost

    @base_cost.setter
    def base_cost(self, base_cost):
        """
        Sets the base_cost of this SalesDataOrderItemInterface.
        Base cost.

        :param base_cost: The base_cost of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_cost = base_cost

    @property
    def base_discount_amount(self):
        """
        Gets the base_discount_amount of this SalesDataOrderItemInterface.
        Base discount amount.

        :return: The base_discount_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_discount_amount

    @base_discount_amount.setter
    def base_discount_amount(self, base_discount_amount):
        """
        Sets the base_discount_amount of this SalesDataOrderItemInterface.
        Base discount amount.

        :param base_discount_amount: The base_discount_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_discount_amount = base_discount_amount

    @property
    def base_discount_invoiced(self):
        """
        Gets the base_discount_invoiced of this SalesDataOrderItemInterface.
        Base discount invoiced.

        :return: The base_discount_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_discount_invoiced

    @base_discount_invoiced.setter
    def base_discount_invoiced(self, base_discount_invoiced):
        """
        Sets the base_discount_invoiced of this SalesDataOrderItemInterface.
        Base discount invoiced.

        :param base_discount_invoiced: The base_discount_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_discount_invoiced = base_discount_invoiced

    @property
    def base_discount_refunded(self):
        """
        Gets the base_discount_refunded of this SalesDataOrderItemInterface.
        Base discount refunded.

        :return: The base_discount_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_discount_refunded

    @base_discount_refunded.setter
    def base_discount_refunded(self, base_discount_refunded):
        """
        Sets the base_discount_refunded of this SalesDataOrderItemInterface.
        Base discount refunded.

        :param base_discount_refunded: The base_discount_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_discount_refunded = base_discount_refunded

    @property
    def base_discount_tax_compensation_amount(self):
        """
        Gets the base_discount_tax_compensation_amount of this SalesDataOrderItemInterface.
        Base discount tax compensation amount.

        :return: The base_discount_tax_compensation_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_discount_tax_compensation_amount

    @base_discount_tax_compensation_amount.setter
    def base_discount_tax_compensation_amount(self, base_discount_tax_compensation_amount):
        """
        Sets the base_discount_tax_compensation_amount of this SalesDataOrderItemInterface.
        Base discount tax compensation amount.

        :param base_discount_tax_compensation_amount: The base_discount_tax_compensation_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_discount_tax_compensation_amount = base_discount_tax_compensation_amount

    @property
    def base_discount_tax_compensation_invoiced(self):
        """
        Gets the base_discount_tax_compensation_invoiced of this SalesDataOrderItemInterface.
        Base discount tax compensation invoiced.

        :return: The base_discount_tax_compensation_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_discount_tax_compensation_invoiced

    @base_discount_tax_compensation_invoiced.setter
    def base_discount_tax_compensation_invoiced(self, base_discount_tax_compensation_invoiced):
        """
        Sets the base_discount_tax_compensation_invoiced of this SalesDataOrderItemInterface.
        Base discount tax compensation invoiced.

        :param base_discount_tax_compensation_invoiced: The base_discount_tax_compensation_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_discount_tax_compensation_invoiced = base_discount_tax_compensation_invoiced

    @property
    def base_discount_tax_compensation_refunded(self):
        """
        Gets the base_discount_tax_compensation_refunded of this SalesDataOrderItemInterface.
        Base discount tax compensation refunded.

        :return: The base_discount_tax_compensation_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_discount_tax_compensation_refunded

    @base_discount_tax_compensation_refunded.setter
    def base_discount_tax_compensation_refunded(self, base_discount_tax_compensation_refunded):
        """
        Sets the base_discount_tax_compensation_refunded of this SalesDataOrderItemInterface.
        Base discount tax compensation refunded.

        :param base_discount_tax_compensation_refunded: The base_discount_tax_compensation_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_discount_tax_compensation_refunded = base_discount_tax_compensation_refunded

    @property
    def base_original_price(self):
        """
        Gets the base_original_price of this SalesDataOrderItemInterface.
        Base original price.

        :return: The base_original_price of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_original_price

    @base_original_price.setter
    def base_original_price(self, base_original_price):
        """
        Sets the base_original_price of this SalesDataOrderItemInterface.
        Base original price.

        :param base_original_price: The base_original_price of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_original_price = base_original_price

    @property
    def base_price(self):
        """
        Gets the base_price of this SalesDataOrderItemInterface.
        Base price.

        :return: The base_price of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_price

    @base_price.setter
    def base_price(self, base_price):
        """
        Sets the base_price of this SalesDataOrderItemInterface.
        Base price.

        :param base_price: The base_price of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_price = base_price

    @property
    def base_price_incl_tax(self):
        """
        Gets the base_price_incl_tax of this SalesDataOrderItemInterface.
        Base price including tax.

        :return: The base_price_incl_tax of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_price_incl_tax

    @base_price_incl_tax.setter
    def base_price_incl_tax(self, base_price_incl_tax):
        """
        Sets the base_price_incl_tax of this SalesDataOrderItemInterface.
        Base price including tax.

        :param base_price_incl_tax: The base_price_incl_tax of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_price_incl_tax = base_price_incl_tax

    @property
    def base_row_invoiced(self):
        """
        Gets the base_row_invoiced of this SalesDataOrderItemInterface.
        Base row invoiced.

        :return: The base_row_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_row_invoiced

    @base_row_invoiced.setter
    def base_row_invoiced(self, base_row_invoiced):
        """
        Sets the base_row_invoiced of this SalesDataOrderItemInterface.
        Base row invoiced.

        :param base_row_invoiced: The base_row_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_row_invoiced = base_row_invoiced

    @property
    def base_row_total(self):
        """
        Gets the base_row_total of this SalesDataOrderItemInterface.
        Base row total.

        :return: The base_row_total of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_row_total

    @base_row_total.setter
    def base_row_total(self, base_row_total):
        """
        Sets the base_row_total of this SalesDataOrderItemInterface.
        Base row total.

        :param base_row_total: The base_row_total of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_row_total = base_row_total

    @property
    def base_row_total_incl_tax(self):
        """
        Gets the base_row_total_incl_tax of this SalesDataOrderItemInterface.
        Base row total including tax.

        :return: The base_row_total_incl_tax of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_row_total_incl_tax

    @base_row_total_incl_tax.setter
    def base_row_total_incl_tax(self, base_row_total_incl_tax):
        """
        Sets the base_row_total_incl_tax of this SalesDataOrderItemInterface.
        Base row total including tax.

        :param base_row_total_incl_tax: The base_row_total_incl_tax of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_row_total_incl_tax = base_row_total_incl_tax

    @property
    def base_tax_amount(self):
        """
        Gets the base_tax_amount of this SalesDataOrderItemInterface.
        Base tax amount.

        :return: The base_tax_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_tax_amount

    @base_tax_amount.setter
    def base_tax_amount(self, base_tax_amount):
        """
        Sets the base_tax_amount of this SalesDataOrderItemInterface.
        Base tax amount.

        :param base_tax_amount: The base_tax_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_tax_amount = base_tax_amount

    @property
    def base_tax_before_discount(self):
        """
        Gets the base_tax_before_discount of this SalesDataOrderItemInterface.
        Base tax before discount.

        :return: The base_tax_before_discount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_tax_before_discount

    @base_tax_before_discount.setter
    def base_tax_before_discount(self, base_tax_before_discount):
        """
        Sets the base_tax_before_discount of this SalesDataOrderItemInterface.
        Base tax before discount.

        :param base_tax_before_discount: The base_tax_before_discount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_tax_before_discount = base_tax_before_discount

    @property
    def base_tax_invoiced(self):
        """
        Gets the base_tax_invoiced of this SalesDataOrderItemInterface.
        Base tax invoiced.

        :return: The base_tax_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_tax_invoiced

    @base_tax_invoiced.setter
    def base_tax_invoiced(self, base_tax_invoiced):
        """
        Sets the base_tax_invoiced of this SalesDataOrderItemInterface.
        Base tax invoiced.

        :param base_tax_invoiced: The base_tax_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_tax_invoiced = base_tax_invoiced

    @property
    def base_tax_refunded(self):
        """
        Gets the base_tax_refunded of this SalesDataOrderItemInterface.
        Base tax refunded.

        :return: The base_tax_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_tax_refunded

    @base_tax_refunded.setter
    def base_tax_refunded(self, base_tax_refunded):
        """
        Sets the base_tax_refunded of this SalesDataOrderItemInterface.
        Base tax refunded.

        :param base_tax_refunded: The base_tax_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_tax_refunded = base_tax_refunded

    @property
    def base_weee_tax_applied_amount(self):
        """
        Gets the base_weee_tax_applied_amount of this SalesDataOrderItemInterface.
        Base WEEE tax applied amount.

        :return: The base_weee_tax_applied_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_weee_tax_applied_amount

    @base_weee_tax_applied_amount.setter
    def base_weee_tax_applied_amount(self, base_weee_tax_applied_amount):
        """
        Sets the base_weee_tax_applied_amount of this SalesDataOrderItemInterface.
        Base WEEE tax applied amount.

        :param base_weee_tax_applied_amount: The base_weee_tax_applied_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_weee_tax_applied_amount = base_weee_tax_applied_amount

    @property
    def base_weee_tax_applied_row_amnt(self):
        """
        Gets the base_weee_tax_applied_row_amnt of this SalesDataOrderItemInterface.
        Base WEEE tax applied row amount.

        :return: The base_weee_tax_applied_row_amnt of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_weee_tax_applied_row_amnt

    @base_weee_tax_applied_row_amnt.setter
    def base_weee_tax_applied_row_amnt(self, base_weee_tax_applied_row_amnt):
        """
        Sets the base_weee_tax_applied_row_amnt of this SalesDataOrderItemInterface.
        Base WEEE tax applied row amount.

        :param base_weee_tax_applied_row_amnt: The base_weee_tax_applied_row_amnt of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_weee_tax_applied_row_amnt = base_weee_tax_applied_row_amnt

    @property
    def base_weee_tax_disposition(self):
        """
        Gets the base_weee_tax_disposition of this SalesDataOrderItemInterface.
        Base WEEE tax disposition.

        :return: The base_weee_tax_disposition of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_weee_tax_disposition

    @base_weee_tax_disposition.setter
    def base_weee_tax_disposition(self, base_weee_tax_disposition):
        """
        Sets the base_weee_tax_disposition of this SalesDataOrderItemInterface.
        Base WEEE tax disposition.

        :param base_weee_tax_disposition: The base_weee_tax_disposition of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_weee_tax_disposition = base_weee_tax_disposition

    @property
    def base_weee_tax_row_disposition(self):
        """
        Gets the base_weee_tax_row_disposition of this SalesDataOrderItemInterface.
        Base WEEE tax row disposition.

        :return: The base_weee_tax_row_disposition of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._base_weee_tax_row_disposition

    @base_weee_tax_row_disposition.setter
    def base_weee_tax_row_disposition(self, base_weee_tax_row_disposition):
        """
        Sets the base_weee_tax_row_disposition of this SalesDataOrderItemInterface.
        Base WEEE tax row disposition.

        :param base_weee_tax_row_disposition: The base_weee_tax_row_disposition of this SalesDataOrderItemInterface.
        :type: float
        """

        self._base_weee_tax_row_disposition = base_weee_tax_row_disposition

    @property
    def created_at(self):
        """
        Gets the created_at of this SalesDataOrderItemInterface.
        Created-at timestamp.

        :return: The created_at of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this SalesDataOrderItemInterface.
        Created-at timestamp.

        :param created_at: The created_at of this SalesDataOrderItemInterface.
        :type: str
        """

        self._created_at = created_at

    @property
    def description(self):
        """
        Gets the description of this SalesDataOrderItemInterface.
        Description.

        :return: The description of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this SalesDataOrderItemInterface.
        Description.

        :param description: The description of this SalesDataOrderItemInterface.
        :type: str
        """

        self._description = description

    @property
    def discount_amount(self):
        """
        Gets the discount_amount of this SalesDataOrderItemInterface.
        Discount amount.

        :return: The discount_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """
        Sets the discount_amount of this SalesDataOrderItemInterface.
        Discount amount.

        :param discount_amount: The discount_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._discount_amount = discount_amount

    @property
    def discount_invoiced(self):
        """
        Gets the discount_invoiced of this SalesDataOrderItemInterface.
        Discount invoiced.

        :return: The discount_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._discount_invoiced

    @discount_invoiced.setter
    def discount_invoiced(self, discount_invoiced):
        """
        Sets the discount_invoiced of this SalesDataOrderItemInterface.
        Discount invoiced.

        :param discount_invoiced: The discount_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._discount_invoiced = discount_invoiced

    @property
    def discount_percent(self):
        """
        Gets the discount_percent of this SalesDataOrderItemInterface.
        Discount percent.

        :return: The discount_percent of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._discount_percent

    @discount_percent.setter
    def discount_percent(self, discount_percent):
        """
        Sets the discount_percent of this SalesDataOrderItemInterface.
        Discount percent.

        :param discount_percent: The discount_percent of this SalesDataOrderItemInterface.
        :type: float
        """

        self._discount_percent = discount_percent

    @property
    def discount_refunded(self):
        """
        Gets the discount_refunded of this SalesDataOrderItemInterface.
        Discount refunded.

        :return: The discount_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._discount_refunded

    @discount_refunded.setter
    def discount_refunded(self, discount_refunded):
        """
        Sets the discount_refunded of this SalesDataOrderItemInterface.
        Discount refunded.

        :param discount_refunded: The discount_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._discount_refunded = discount_refunded

    @property
    def event_id(self):
        """
        Gets the event_id of this SalesDataOrderItemInterface.
        Event ID.

        :return: The event_id of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """
        Sets the event_id of this SalesDataOrderItemInterface.
        Event ID.

        :param event_id: The event_id of this SalesDataOrderItemInterface.
        :type: int
        """

        self._event_id = event_id

    @property
    def ext_order_item_id(self):
        """
        Gets the ext_order_item_id of this SalesDataOrderItemInterface.
        External order item ID.

        :return: The ext_order_item_id of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._ext_order_item_id

    @ext_order_item_id.setter
    def ext_order_item_id(self, ext_order_item_id):
        """
        Sets the ext_order_item_id of this SalesDataOrderItemInterface.
        External order item ID.

        :param ext_order_item_id: The ext_order_item_id of this SalesDataOrderItemInterface.
        :type: str
        """

        self._ext_order_item_id = ext_order_item_id

    @property
    def free_shipping(self):
        """
        Gets the free_shipping of this SalesDataOrderItemInterface.
        Free-shipping flag value.

        :return: The free_shipping of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._free_shipping

    @free_shipping.setter
    def free_shipping(self, free_shipping):
        """
        Sets the free_shipping of this SalesDataOrderItemInterface.
        Free-shipping flag value.

        :param free_shipping: The free_shipping of this SalesDataOrderItemInterface.
        :type: int
        """

        self._free_shipping = free_shipping

    @property
    def gw_base_price(self):
        """
        Gets the gw_base_price of this SalesDataOrderItemInterface.
        GW base price.

        :return: The gw_base_price of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_base_price

    @gw_base_price.setter
    def gw_base_price(self, gw_base_price):
        """
        Sets the gw_base_price of this SalesDataOrderItemInterface.
        GW base price.

        :param gw_base_price: The gw_base_price of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_base_price = gw_base_price

    @property
    def gw_base_price_invoiced(self):
        """
        Gets the gw_base_price_invoiced of this SalesDataOrderItemInterface.
        GW base price invoiced.

        :return: The gw_base_price_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_base_price_invoiced

    @gw_base_price_invoiced.setter
    def gw_base_price_invoiced(self, gw_base_price_invoiced):
        """
        Sets the gw_base_price_invoiced of this SalesDataOrderItemInterface.
        GW base price invoiced.

        :param gw_base_price_invoiced: The gw_base_price_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_base_price_invoiced = gw_base_price_invoiced

    @property
    def gw_base_price_refunded(self):
        """
        Gets the gw_base_price_refunded of this SalesDataOrderItemInterface.
        GW base price refunded.

        :return: The gw_base_price_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_base_price_refunded

    @gw_base_price_refunded.setter
    def gw_base_price_refunded(self, gw_base_price_refunded):
        """
        Sets the gw_base_price_refunded of this SalesDataOrderItemInterface.
        GW base price refunded.

        :param gw_base_price_refunded: The gw_base_price_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_base_price_refunded = gw_base_price_refunded

    @property
    def gw_base_tax_amount(self):
        """
        Gets the gw_base_tax_amount of this SalesDataOrderItemInterface.
        GW base tax amount.

        :return: The gw_base_tax_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_base_tax_amount

    @gw_base_tax_amount.setter
    def gw_base_tax_amount(self, gw_base_tax_amount):
        """
        Sets the gw_base_tax_amount of this SalesDataOrderItemInterface.
        GW base tax amount.

        :param gw_base_tax_amount: The gw_base_tax_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_base_tax_amount = gw_base_tax_amount

    @property
    def gw_base_tax_amount_invoiced(self):
        """
        Gets the gw_base_tax_amount_invoiced of this SalesDataOrderItemInterface.
        GW base tax amount invoiced.

        :return: The gw_base_tax_amount_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_base_tax_amount_invoiced

    @gw_base_tax_amount_invoiced.setter
    def gw_base_tax_amount_invoiced(self, gw_base_tax_amount_invoiced):
        """
        Sets the gw_base_tax_amount_invoiced of this SalesDataOrderItemInterface.
        GW base tax amount invoiced.

        :param gw_base_tax_amount_invoiced: The gw_base_tax_amount_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_base_tax_amount_invoiced = gw_base_tax_amount_invoiced

    @property
    def gw_base_tax_amount_refunded(self):
        """
        Gets the gw_base_tax_amount_refunded of this SalesDataOrderItemInterface.
        GW base tax amount refunded.

        :return: The gw_base_tax_amount_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_base_tax_amount_refunded

    @gw_base_tax_amount_refunded.setter
    def gw_base_tax_amount_refunded(self, gw_base_tax_amount_refunded):
        """
        Sets the gw_base_tax_amount_refunded of this SalesDataOrderItemInterface.
        GW base tax amount refunded.

        :param gw_base_tax_amount_refunded: The gw_base_tax_amount_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_base_tax_amount_refunded = gw_base_tax_amount_refunded

    @property
    def gw_id(self):
        """
        Gets the gw_id of this SalesDataOrderItemInterface.
        GW ID.

        :return: The gw_id of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._gw_id

    @gw_id.setter
    def gw_id(self, gw_id):
        """
        Sets the gw_id of this SalesDataOrderItemInterface.
        GW ID.

        :param gw_id: The gw_id of this SalesDataOrderItemInterface.
        :type: int
        """

        self._gw_id = gw_id

    @property
    def gw_price(self):
        """
        Gets the gw_price of this SalesDataOrderItemInterface.
        GW price.

        :return: The gw_price of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_price

    @gw_price.setter
    def gw_price(self, gw_price):
        """
        Sets the gw_price of this SalesDataOrderItemInterface.
        GW price.

        :param gw_price: The gw_price of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_price = gw_price

    @property
    def gw_price_invoiced(self):
        """
        Gets the gw_price_invoiced of this SalesDataOrderItemInterface.
        GW price invoiced.

        :return: The gw_price_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_price_invoiced

    @gw_price_invoiced.setter
    def gw_price_invoiced(self, gw_price_invoiced):
        """
        Sets the gw_price_invoiced of this SalesDataOrderItemInterface.
        GW price invoiced.

        :param gw_price_invoiced: The gw_price_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_price_invoiced = gw_price_invoiced

    @property
    def gw_price_refunded(self):
        """
        Gets the gw_price_refunded of this SalesDataOrderItemInterface.
        GW price refunded.

        :return: The gw_price_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_price_refunded

    @gw_price_refunded.setter
    def gw_price_refunded(self, gw_price_refunded):
        """
        Sets the gw_price_refunded of this SalesDataOrderItemInterface.
        GW price refunded.

        :param gw_price_refunded: The gw_price_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_price_refunded = gw_price_refunded

    @property
    def gw_tax_amount(self):
        """
        Gets the gw_tax_amount of this SalesDataOrderItemInterface.
        GW tax amount.

        :return: The gw_tax_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_tax_amount

    @gw_tax_amount.setter
    def gw_tax_amount(self, gw_tax_amount):
        """
        Sets the gw_tax_amount of this SalesDataOrderItemInterface.
        GW tax amount.

        :param gw_tax_amount: The gw_tax_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_tax_amount = gw_tax_amount

    @property
    def gw_tax_amount_invoiced(self):
        """
        Gets the gw_tax_amount_invoiced of this SalesDataOrderItemInterface.
        GW tax amount invoiced.

        :return: The gw_tax_amount_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_tax_amount_invoiced

    @gw_tax_amount_invoiced.setter
    def gw_tax_amount_invoiced(self, gw_tax_amount_invoiced):
        """
        Sets the gw_tax_amount_invoiced of this SalesDataOrderItemInterface.
        GW tax amount invoiced.

        :param gw_tax_amount_invoiced: The gw_tax_amount_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_tax_amount_invoiced = gw_tax_amount_invoiced

    @property
    def gw_tax_amount_refunded(self):
        """
        Gets the gw_tax_amount_refunded of this SalesDataOrderItemInterface.
        GW tax amount refunded.

        :return: The gw_tax_amount_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._gw_tax_amount_refunded

    @gw_tax_amount_refunded.setter
    def gw_tax_amount_refunded(self, gw_tax_amount_refunded):
        """
        Sets the gw_tax_amount_refunded of this SalesDataOrderItemInterface.
        GW tax amount refunded.

        :param gw_tax_amount_refunded: The gw_tax_amount_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._gw_tax_amount_refunded = gw_tax_amount_refunded

    @property
    def discount_tax_compensation_amount(self):
        """
        Gets the discount_tax_compensation_amount of this SalesDataOrderItemInterface.
        Discount tax compensation amount.

        :return: The discount_tax_compensation_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._discount_tax_compensation_amount

    @discount_tax_compensation_amount.setter
    def discount_tax_compensation_amount(self, discount_tax_compensation_amount):
        """
        Sets the discount_tax_compensation_amount of this SalesDataOrderItemInterface.
        Discount tax compensation amount.

        :param discount_tax_compensation_amount: The discount_tax_compensation_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._discount_tax_compensation_amount = discount_tax_compensation_amount

    @property
    def discount_tax_compensation_canceled(self):
        """
        Gets the discount_tax_compensation_canceled of this SalesDataOrderItemInterface.
        Discount tax compensation canceled.

        :return: The discount_tax_compensation_canceled of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._discount_tax_compensation_canceled

    @discount_tax_compensation_canceled.setter
    def discount_tax_compensation_canceled(self, discount_tax_compensation_canceled):
        """
        Sets the discount_tax_compensation_canceled of this SalesDataOrderItemInterface.
        Discount tax compensation canceled.

        :param discount_tax_compensation_canceled: The discount_tax_compensation_canceled of this SalesDataOrderItemInterface.
        :type: float
        """

        self._discount_tax_compensation_canceled = discount_tax_compensation_canceled

    @property
    def discount_tax_compensation_invoiced(self):
        """
        Gets the discount_tax_compensation_invoiced of this SalesDataOrderItemInterface.
        Discount tax compensation invoiced.

        :return: The discount_tax_compensation_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._discount_tax_compensation_invoiced

    @discount_tax_compensation_invoiced.setter
    def discount_tax_compensation_invoiced(self, discount_tax_compensation_invoiced):
        """
        Sets the discount_tax_compensation_invoiced of this SalesDataOrderItemInterface.
        Discount tax compensation invoiced.

        :param discount_tax_compensation_invoiced: The discount_tax_compensation_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._discount_tax_compensation_invoiced = discount_tax_compensation_invoiced

    @property
    def discount_tax_compensation_refunded(self):
        """
        Gets the discount_tax_compensation_refunded of this SalesDataOrderItemInterface.
        Discount tax compensation refunded.

        :return: The discount_tax_compensation_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._discount_tax_compensation_refunded

    @discount_tax_compensation_refunded.setter
    def discount_tax_compensation_refunded(self, discount_tax_compensation_refunded):
        """
        Sets the discount_tax_compensation_refunded of this SalesDataOrderItemInterface.
        Discount tax compensation refunded.

        :param discount_tax_compensation_refunded: The discount_tax_compensation_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._discount_tax_compensation_refunded = discount_tax_compensation_refunded

    @property
    def is_qty_decimal(self):
        """
        Gets the is_qty_decimal of this SalesDataOrderItemInterface.
        Is-quantity-decimal flag value.

        :return: The is_qty_decimal of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._is_qty_decimal

    @is_qty_decimal.setter
    def is_qty_decimal(self, is_qty_decimal):
        """
        Sets the is_qty_decimal of this SalesDataOrderItemInterface.
        Is-quantity-decimal flag value.

        :param is_qty_decimal: The is_qty_decimal of this SalesDataOrderItemInterface.
        :type: int
        """

        self._is_qty_decimal = is_qty_decimal

    @property
    def is_virtual(self):
        """
        Gets the is_virtual of this SalesDataOrderItemInterface.
        Is-virtual flag value.

        :return: The is_virtual of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._is_virtual

    @is_virtual.setter
    def is_virtual(self, is_virtual):
        """
        Sets the is_virtual of this SalesDataOrderItemInterface.
        Is-virtual flag value.

        :param is_virtual: The is_virtual of this SalesDataOrderItemInterface.
        :type: int
        """

        self._is_virtual = is_virtual

    @property
    def item_id(self):
        """
        Gets the item_id of this SalesDataOrderItemInterface.
        Item ID.

        :return: The item_id of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """
        Sets the item_id of this SalesDataOrderItemInterface.
        Item ID.

        :param item_id: The item_id of this SalesDataOrderItemInterface.
        :type: int
        """

        self._item_id = item_id

    @property
    def locked_do_invoice(self):
        """
        Gets the locked_do_invoice of this SalesDataOrderItemInterface.
        Locked DO invoice flag value.

        :return: The locked_do_invoice of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._locked_do_invoice

    @locked_do_invoice.setter
    def locked_do_invoice(self, locked_do_invoice):
        """
        Sets the locked_do_invoice of this SalesDataOrderItemInterface.
        Locked DO invoice flag value.

        :param locked_do_invoice: The locked_do_invoice of this SalesDataOrderItemInterface.
        :type: int
        """

        self._locked_do_invoice = locked_do_invoice

    @property
    def locked_do_ship(self):
        """
        Gets the locked_do_ship of this SalesDataOrderItemInterface.
        Locked DO ship flag value.

        :return: The locked_do_ship of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._locked_do_ship

    @locked_do_ship.setter
    def locked_do_ship(self, locked_do_ship):
        """
        Sets the locked_do_ship of this SalesDataOrderItemInterface.
        Locked DO ship flag value.

        :param locked_do_ship: The locked_do_ship of this SalesDataOrderItemInterface.
        :type: int
        """

        self._locked_do_ship = locked_do_ship

    @property
    def name(self):
        """
        Gets the name of this SalesDataOrderItemInterface.
        Name.

        :return: The name of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this SalesDataOrderItemInterface.
        Name.

        :param name: The name of this SalesDataOrderItemInterface.
        :type: str
        """

        self._name = name

    @property
    def no_discount(self):
        """
        Gets the no_discount of this SalesDataOrderItemInterface.
        No-discount flag value.

        :return: The no_discount of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._no_discount

    @no_discount.setter
    def no_discount(self, no_discount):
        """
        Sets the no_discount of this SalesDataOrderItemInterface.
        No-discount flag value.

        :param no_discount: The no_discount of this SalesDataOrderItemInterface.
        :type: int
        """

        self._no_discount = no_discount

    @property
    def order_id(self):
        """
        Gets the order_id of this SalesDataOrderItemInterface.
        Order ID.

        :return: The order_id of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """
        Sets the order_id of this SalesDataOrderItemInterface.
        Order ID.

        :param order_id: The order_id of this SalesDataOrderItemInterface.
        :type: int
        """

        self._order_id = order_id

    @property
    def original_price(self):
        """
        Gets the original_price of this SalesDataOrderItemInterface.
        Original price.

        :return: The original_price of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._original_price

    @original_price.setter
    def original_price(self, original_price):
        """
        Sets the original_price of this SalesDataOrderItemInterface.
        Original price.

        :param original_price: The original_price of this SalesDataOrderItemInterface.
        :type: float
        """

        self._original_price = original_price

    @property
    def parent_item_id(self):
        """
        Gets the parent_item_id of this SalesDataOrderItemInterface.
        Parent item ID.

        :return: The parent_item_id of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._parent_item_id

    @parent_item_id.setter
    def parent_item_id(self, parent_item_id):
        """
        Sets the parent_item_id of this SalesDataOrderItemInterface.
        Parent item ID.

        :param parent_item_id: The parent_item_id of this SalesDataOrderItemInterface.
        :type: int
        """

        self._parent_item_id = parent_item_id

    @property
    def price(self):
        """
        Gets the price of this SalesDataOrderItemInterface.
        Price.

        :return: The price of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """
        Sets the price of this SalesDataOrderItemInterface.
        Price.

        :param price: The price of this SalesDataOrderItemInterface.
        :type: float
        """

        self._price = price

    @property
    def price_incl_tax(self):
        """
        Gets the price_incl_tax of this SalesDataOrderItemInterface.
        Price including tax.

        :return: The price_incl_tax of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._price_incl_tax

    @price_incl_tax.setter
    def price_incl_tax(self, price_incl_tax):
        """
        Sets the price_incl_tax of this SalesDataOrderItemInterface.
        Price including tax.

        :param price_incl_tax: The price_incl_tax of this SalesDataOrderItemInterface.
        :type: float
        """

        self._price_incl_tax = price_incl_tax

    @property
    def product_id(self):
        """
        Gets the product_id of this SalesDataOrderItemInterface.
        Product ID.

        :return: The product_id of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """
        Sets the product_id of this SalesDataOrderItemInterface.
        Product ID.

        :param product_id: The product_id of this SalesDataOrderItemInterface.
        :type: int
        """

        self._product_id = product_id

    @property
    def product_type(self):
        """
        Gets the product_type of this SalesDataOrderItemInterface.
        Product type.

        :return: The product_type of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """
        Sets the product_type of this SalesDataOrderItemInterface.
        Product type.

        :param product_type: The product_type of this SalesDataOrderItemInterface.
        :type: str
        """

        self._product_type = product_type

    @property
    def qty_backordered(self):
        """
        Gets the qty_backordered of this SalesDataOrderItemInterface.
        Quantity backordered.

        :return: The qty_backordered of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._qty_backordered

    @qty_backordered.setter
    def qty_backordered(self, qty_backordered):
        """
        Sets the qty_backordered of this SalesDataOrderItemInterface.
        Quantity backordered.

        :param qty_backordered: The qty_backordered of this SalesDataOrderItemInterface.
        :type: float
        """

        self._qty_backordered = qty_backordered

    @property
    def qty_canceled(self):
        """
        Gets the qty_canceled of this SalesDataOrderItemInterface.
        Quantity canceled.

        :return: The qty_canceled of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._qty_canceled

    @qty_canceled.setter
    def qty_canceled(self, qty_canceled):
        """
        Sets the qty_canceled of this SalesDataOrderItemInterface.
        Quantity canceled.

        :param qty_canceled: The qty_canceled of this SalesDataOrderItemInterface.
        :type: float
        """

        self._qty_canceled = qty_canceled

    @property
    def qty_invoiced(self):
        """
        Gets the qty_invoiced of this SalesDataOrderItemInterface.
        Quantity invoiced.

        :return: The qty_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._qty_invoiced

    @qty_invoiced.setter
    def qty_invoiced(self, qty_invoiced):
        """
        Sets the qty_invoiced of this SalesDataOrderItemInterface.
        Quantity invoiced.

        :param qty_invoiced: The qty_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._qty_invoiced = qty_invoiced

    @property
    def qty_ordered(self):
        """
        Gets the qty_ordered of this SalesDataOrderItemInterface.
        Quantity ordered.

        :return: The qty_ordered of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._qty_ordered

    @qty_ordered.setter
    def qty_ordered(self, qty_ordered):
        """
        Sets the qty_ordered of this SalesDataOrderItemInterface.
        Quantity ordered.

        :param qty_ordered: The qty_ordered of this SalesDataOrderItemInterface.
        :type: float
        """

        self._qty_ordered = qty_ordered

    @property
    def qty_refunded(self):
        """
        Gets the qty_refunded of this SalesDataOrderItemInterface.
        Quantity refunded.

        :return: The qty_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._qty_refunded

    @qty_refunded.setter
    def qty_refunded(self, qty_refunded):
        """
        Sets the qty_refunded of this SalesDataOrderItemInterface.
        Quantity refunded.

        :param qty_refunded: The qty_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._qty_refunded = qty_refunded

    @property
    def qty_returned(self):
        """
        Gets the qty_returned of this SalesDataOrderItemInterface.
        Quantity returned.

        :return: The qty_returned of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._qty_returned

    @qty_returned.setter
    def qty_returned(self, qty_returned):
        """
        Sets the qty_returned of this SalesDataOrderItemInterface.
        Quantity returned.

        :param qty_returned: The qty_returned of this SalesDataOrderItemInterface.
        :type: float
        """

        self._qty_returned = qty_returned

    @property
    def qty_shipped(self):
        """
        Gets the qty_shipped of this SalesDataOrderItemInterface.
        Quantity shipped.

        :return: The qty_shipped of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._qty_shipped

    @qty_shipped.setter
    def qty_shipped(self, qty_shipped):
        """
        Sets the qty_shipped of this SalesDataOrderItemInterface.
        Quantity shipped.

        :param qty_shipped: The qty_shipped of this SalesDataOrderItemInterface.
        :type: float
        """

        self._qty_shipped = qty_shipped

    @property
    def quote_item_id(self):
        """
        Gets the quote_item_id of this SalesDataOrderItemInterface.
        Quote item ID.

        :return: The quote_item_id of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._quote_item_id

    @quote_item_id.setter
    def quote_item_id(self, quote_item_id):
        """
        Sets the quote_item_id of this SalesDataOrderItemInterface.
        Quote item ID.

        :param quote_item_id: The quote_item_id of this SalesDataOrderItemInterface.
        :type: int
        """

        self._quote_item_id = quote_item_id

    @property
    def row_invoiced(self):
        """
        Gets the row_invoiced of this SalesDataOrderItemInterface.
        Row invoiced.

        :return: The row_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._row_invoiced

    @row_invoiced.setter
    def row_invoiced(self, row_invoiced):
        """
        Sets the row_invoiced of this SalesDataOrderItemInterface.
        Row invoiced.

        :param row_invoiced: The row_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._row_invoiced = row_invoiced

    @property
    def row_total(self):
        """
        Gets the row_total of this SalesDataOrderItemInterface.
        Row total.

        :return: The row_total of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._row_total

    @row_total.setter
    def row_total(self, row_total):
        """
        Sets the row_total of this SalesDataOrderItemInterface.
        Row total.

        :param row_total: The row_total of this SalesDataOrderItemInterface.
        :type: float
        """

        self._row_total = row_total

    @property
    def row_total_incl_tax(self):
        """
        Gets the row_total_incl_tax of this SalesDataOrderItemInterface.
        Row total including tax.

        :return: The row_total_incl_tax of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._row_total_incl_tax

    @row_total_incl_tax.setter
    def row_total_incl_tax(self, row_total_incl_tax):
        """
        Sets the row_total_incl_tax of this SalesDataOrderItemInterface.
        Row total including tax.

        :param row_total_incl_tax: The row_total_incl_tax of this SalesDataOrderItemInterface.
        :type: float
        """

        self._row_total_incl_tax = row_total_incl_tax

    @property
    def row_weight(self):
        """
        Gets the row_weight of this SalesDataOrderItemInterface.
        Row weight.

        :return: The row_weight of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._row_weight

    @row_weight.setter
    def row_weight(self, row_weight):
        """
        Sets the row_weight of this SalesDataOrderItemInterface.
        Row weight.

        :param row_weight: The row_weight of this SalesDataOrderItemInterface.
        :type: float
        """

        self._row_weight = row_weight

    @property
    def sku(self):
        """
        Gets the sku of this SalesDataOrderItemInterface.
        SKU.

        :return: The sku of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """
        Sets the sku of this SalesDataOrderItemInterface.
        SKU.

        :param sku: The sku of this SalesDataOrderItemInterface.
        :type: str
        """
        if sku is None:
            raise ValueError("Invalid value for `sku`, must not be `None`")

        self._sku = sku

    @property
    def store_id(self):
        """
        Gets the store_id of this SalesDataOrderItemInterface.
        Store ID.

        :return: The store_id of this SalesDataOrderItemInterface.
        :rtype: int
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """
        Sets the store_id of this SalesDataOrderItemInterface.
        Store ID.

        :param store_id: The store_id of this SalesDataOrderItemInterface.
        :type: int
        """

        self._store_id = store_id

    @property
    def tax_amount(self):
        """
        Gets the tax_amount of this SalesDataOrderItemInterface.
        Tax amount.

        :return: The tax_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """
        Sets the tax_amount of this SalesDataOrderItemInterface.
        Tax amount.

        :param tax_amount: The tax_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._tax_amount = tax_amount

    @property
    def tax_before_discount(self):
        """
        Gets the tax_before_discount of this SalesDataOrderItemInterface.
        Tax before discount.

        :return: The tax_before_discount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._tax_before_discount

    @tax_before_discount.setter
    def tax_before_discount(self, tax_before_discount):
        """
        Sets the tax_before_discount of this SalesDataOrderItemInterface.
        Tax before discount.

        :param tax_before_discount: The tax_before_discount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._tax_before_discount = tax_before_discount

    @property
    def tax_canceled(self):
        """
        Gets the tax_canceled of this SalesDataOrderItemInterface.
        Tax canceled.

        :return: The tax_canceled of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._tax_canceled

    @tax_canceled.setter
    def tax_canceled(self, tax_canceled):
        """
        Sets the tax_canceled of this SalesDataOrderItemInterface.
        Tax canceled.

        :param tax_canceled: The tax_canceled of this SalesDataOrderItemInterface.
        :type: float
        """

        self._tax_canceled = tax_canceled

    @property
    def tax_invoiced(self):
        """
        Gets the tax_invoiced of this SalesDataOrderItemInterface.
        Tax invoiced.

        :return: The tax_invoiced of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._tax_invoiced

    @tax_invoiced.setter
    def tax_invoiced(self, tax_invoiced):
        """
        Sets the tax_invoiced of this SalesDataOrderItemInterface.
        Tax invoiced.

        :param tax_invoiced: The tax_invoiced of this SalesDataOrderItemInterface.
        :type: float
        """

        self._tax_invoiced = tax_invoiced

    @property
    def tax_percent(self):
        """
        Gets the tax_percent of this SalesDataOrderItemInterface.
        Tax percent.

        :return: The tax_percent of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._tax_percent

    @tax_percent.setter
    def tax_percent(self, tax_percent):
        """
        Sets the tax_percent of this SalesDataOrderItemInterface.
        Tax percent.

        :param tax_percent: The tax_percent of this SalesDataOrderItemInterface.
        :type: float
        """

        self._tax_percent = tax_percent

    @property
    def tax_refunded(self):
        """
        Gets the tax_refunded of this SalesDataOrderItemInterface.
        Tax refunded.

        :return: The tax_refunded of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._tax_refunded

    @tax_refunded.setter
    def tax_refunded(self, tax_refunded):
        """
        Sets the tax_refunded of this SalesDataOrderItemInterface.
        Tax refunded.

        :param tax_refunded: The tax_refunded of this SalesDataOrderItemInterface.
        :type: float
        """

        self._tax_refunded = tax_refunded

    @property
    def updated_at(self):
        """
        Gets the updated_at of this SalesDataOrderItemInterface.
        Updated-at timestamp.

        :return: The updated_at of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """
        Sets the updated_at of this SalesDataOrderItemInterface.
        Updated-at timestamp.

        :param updated_at: The updated_at of this SalesDataOrderItemInterface.
        :type: str
        """

        self._updated_at = updated_at

    @property
    def weee_tax_applied(self):
        """
        Gets the weee_tax_applied of this SalesDataOrderItemInterface.
        WEEE tax applied.

        :return: The weee_tax_applied of this SalesDataOrderItemInterface.
        :rtype: str
        """
        return self._weee_tax_applied

    @weee_tax_applied.setter
    def weee_tax_applied(self, weee_tax_applied):
        """
        Sets the weee_tax_applied of this SalesDataOrderItemInterface.
        WEEE tax applied.

        :param weee_tax_applied: The weee_tax_applied of this SalesDataOrderItemInterface.
        :type: str
        """

        self._weee_tax_applied = weee_tax_applied

    @property
    def weee_tax_applied_amount(self):
        """
        Gets the weee_tax_applied_amount of this SalesDataOrderItemInterface.
        WEEE tax applied amount.

        :return: The weee_tax_applied_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._weee_tax_applied_amount

    @weee_tax_applied_amount.setter
    def weee_tax_applied_amount(self, weee_tax_applied_amount):
        """
        Sets the weee_tax_applied_amount of this SalesDataOrderItemInterface.
        WEEE tax applied amount.

        :param weee_tax_applied_amount: The weee_tax_applied_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._weee_tax_applied_amount = weee_tax_applied_amount

    @property
    def weee_tax_applied_row_amount(self):
        """
        Gets the weee_tax_applied_row_amount of this SalesDataOrderItemInterface.
        WEEE tax applied row amount.

        :return: The weee_tax_applied_row_amount of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._weee_tax_applied_row_amount

    @weee_tax_applied_row_amount.setter
    def weee_tax_applied_row_amount(self, weee_tax_applied_row_amount):
        """
        Sets the weee_tax_applied_row_amount of this SalesDataOrderItemInterface.
        WEEE tax applied row amount.

        :param weee_tax_applied_row_amount: The weee_tax_applied_row_amount of this SalesDataOrderItemInterface.
        :type: float
        """

        self._weee_tax_applied_row_amount = weee_tax_applied_row_amount

    @property
    def weee_tax_disposition(self):
        """
        Gets the weee_tax_disposition of this SalesDataOrderItemInterface.
        WEEE tax disposition.

        :return: The weee_tax_disposition of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._weee_tax_disposition

    @weee_tax_disposition.setter
    def weee_tax_disposition(self, weee_tax_disposition):
        """
        Sets the weee_tax_disposition of this SalesDataOrderItemInterface.
        WEEE tax disposition.

        :param weee_tax_disposition: The weee_tax_disposition of this SalesDataOrderItemInterface.
        :type: float
        """

        self._weee_tax_disposition = weee_tax_disposition

    @property
    def weee_tax_row_disposition(self):
        """
        Gets the weee_tax_row_disposition of this SalesDataOrderItemInterface.
        WEEE tax row disposition.

        :return: The weee_tax_row_disposition of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._weee_tax_row_disposition

    @weee_tax_row_disposition.setter
    def weee_tax_row_disposition(self, weee_tax_row_disposition):
        """
        Sets the weee_tax_row_disposition of this SalesDataOrderItemInterface.
        WEEE tax row disposition.

        :param weee_tax_row_disposition: The weee_tax_row_disposition of this SalesDataOrderItemInterface.
        :type: float
        """

        self._weee_tax_row_disposition = weee_tax_row_disposition

    @property
    def weight(self):
        """
        Gets the weight of this SalesDataOrderItemInterface.
        Weight.

        :return: The weight of this SalesDataOrderItemInterface.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """
        Sets the weight of this SalesDataOrderItemInterface.
        Weight.

        :param weight: The weight of this SalesDataOrderItemInterface.
        :type: float
        """

        self._weight = weight

    @property
    def parent_item(self):
        """
        Gets the parent_item of this SalesDataOrderItemInterface.

        :return: The parent_item of this SalesDataOrderItemInterface.
        :rtype: SalesDataOrderItemInterface
        """
        return self._parent_item

    @parent_item.setter
    def parent_item(self, parent_item):
        """
        Sets the parent_item of this SalesDataOrderItemInterface.

        :param parent_item: The parent_item of this SalesDataOrderItemInterface.
        :type: SalesDataOrderItemInterface
        """

        self._parent_item = parent_item

    @property
    def product_option(self):
        """
        Gets the product_option of this SalesDataOrderItemInterface.

        :return: The product_option of this SalesDataOrderItemInterface.
        :rtype: CatalogDataProductOptionInterface
        """
        return self._product_option

    @product_option.setter
    def product_option(self, product_option):
        """
        Sets the product_option of this SalesDataOrderItemInterface.

        :param product_option: The product_option of this SalesDataOrderItemInterface.
        :type: CatalogDataProductOptionInterface
        """

        self._product_option = product_option

    @property
    def extension_attributes(self):
        """
        Gets the extension_attributes of this SalesDataOrderItemInterface.

        :return: The extension_attributes of this SalesDataOrderItemInterface.
        :rtype: SalesDataOrderItemExtensionInterface
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """
        Sets the extension_attributes of this SalesDataOrderItemInterface.

        :param extension_attributes: The extension_attributes of this SalesDataOrderItemInterface.
        :type: SalesDataOrderItemExtensionInterface
        """

        self._extension_attributes = extension_attributes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, SalesDataOrderItemInterface):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
